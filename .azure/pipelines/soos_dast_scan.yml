# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

# Learn more about how to customize the task at https://github.com/soos-io/soos-sbom
- task: Dev-SOOS-Security-Analysis@0
  displayName: Security Analysis
  #continueOnError: true # Prevents the build from failing in some situations. Defaults to false
  inputs:
    apiKey: $(apiKey)
    clientId: $(clientId)
    scanType: 'DAST'
    baseUri: 'https://qa-api.soos.io/api/'
    dockerImageTag: 'beta'
    projectName: 'dastAzure_test' # The name of the project. Defaults to 'Build.Repository.Name'.
    #targetToScan: 'ericallard/elasticsearch:vulnerable' #CSA
    #sbomPath: "./sboms" #SBOM
    #projectPath: "./sarifFiles" #SAST
    targetUri: "https://www.example.com/" #DAST
    exportFormat: "soosissues"
    exportFileType: "csv"
    outputDirectory: "./reports"
    #scanMode: 'apiscan' #DAST
    #apiFormat: 'soap' #DAST
    logLevel: "DEBUG"
    #otherOptions: '-o cyclonedx-xml'
    #otherOptions: "-d"
- task: CopyFiles@2
  inputs:
    Contents: |
      $(Pipeline.Workspace)/s/report.zap.json
      $(Pipeline.Workspace)/s/*.sarif.json
      $(Pipeline.Workspace)/s/*.csafvex.json
      $(Pipeline.Workspace)/s/*.cdx.json
      $(Pipeline.Workspace)/s/*.cdx.xml
      $(Pipeline.Workspace)/s/*.spdx.json
      $(Pipeline.Workspace)/s/*.spdx.txt
      $(Pipeline.Workspace)/s/*.soos*.html
      $(Pipeline.Workspace)/s/*.soos*.csv
    TargetFolder: $(Pipeline.Workspace)/reports
- task: PublishBuildArtifacts@1
  displayName: "Publish Scan Results"
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: $(Pipeline.Workspace)/reports
    ArtifactName: "reports"
    publishLocation: "Container"
